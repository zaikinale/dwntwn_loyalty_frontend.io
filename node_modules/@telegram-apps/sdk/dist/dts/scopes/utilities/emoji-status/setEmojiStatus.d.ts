import { RequestOptionsNoCapture } from '../../../types.js';
export interface SetEmojiStatusOptions extends RequestOptionsNoCapture {
    duration?: number;
}
/**
 * Opens a dialog allowing the user to set the specified custom emoji as their status.
 * @returns Promise with boolean value indicating if the status was set.
 * @param options - additional options.
 * @since Mini Apps v8.0
 * @throws {ConcurrentCallError} Emoji status set request is currently in progress
 * @throws {SetEmojiStatusError} Failed to set emoji status
 * @throws {FunctionNotAvailableError} The environment is unknown
 * @throws {FunctionNotAvailableError} The SDK is not initialized
 * @throws {FunctionNotAvailableError} The function is not supported
 * @example
 * if (setEmojiStatus.isAvailable()) {
 *   const statusSet = await setEmojiStatus('5361800828313167608');
 * }
 */
export declare const setEmojiStatus: import('../../wrappers/wrapSafe.js').SafeWrapped<(customEmojiId: string, options?: SetEmojiStatusOptions) => import('better-promises').AbortablePromise<any>, true, never>;
export declare const setEmojiStatusPromise: import('@telegram-apps/signals').Computed<import('better-promises').AbortablePromise<any> | undefined>, isSettingEmojiStatus: import('@telegram-apps/signals').Computed<boolean>;
export declare const setEmojiStatusError: import('@telegram-apps/signals').Computed<Error | undefined>;
