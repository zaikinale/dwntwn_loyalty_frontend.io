import { State } from './types.js';
/**
 * The Mini App background color.
 *
 * Represents an RGB color, or theme parameters key, like "bg_color", "secondary_bg_color", etc.
 *
 * Note that using a theme parameters key, background color becomes bound to the current
 * theme parameters, making it automatically being updated whenever theme parameters change.
 * In order to remove this bind, use an explicit RGB color.
 */
export declare const _backgroundColor: import('@telegram-apps/signals').Signal<string>, backgroundColor: import('@telegram-apps/signals').Computed<string>;
/**
 * RGB representation of the background color.
 *
 * This value requires the Theme Params component to be mounted to extract a valid RGB value
 * of the color key.
 */
export declare const backgroundColorRGB: import('@telegram-apps/signals').Computed<`#${string}` | undefined>;
/**
 * The Mini App bottom bar background color.
 */
export declare const _bottomBarColor: import('@telegram-apps/signals').Signal<string>, bottomBarColor: import('@telegram-apps/signals').Computed<string>;
/**
 * RGB representation of the bottom bar background color.
 *
 * This value requires the Theme Params component to be mounted to extract a valid RGB value
 * of the color key.
 */
export declare const bottomBarColorRGB: import('@telegram-apps/signals').Computed<`#${string}` | undefined>;
/**
 * The Mini App header color.
 */
export declare const _headerColor: import('@telegram-apps/signals').Signal<string>, headerColor: import('@telegram-apps/signals').Computed<string>;
/**
 * RGB representation of the header color.
 *
 * This value requires the Theme Params component to be mounted to extract a valid RGB value
 * of the color key.
 */
export declare const headerColorRGB: import('@telegram-apps/signals').Computed<`#${string}` | undefined>;
/**
 * True if CSS variables are currently bound.
 */
export declare const _isCssVarsBound: import('@telegram-apps/signals').Signal<boolean>, isCssVarsBound: import('@telegram-apps/signals').Computed<boolean>;
/**
 * True if the current Mini App background color is recognized as dark.
 */
export declare const isDark: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Signal indicating if the mini app is currently active.
 */
export declare const _isActive: import('@telegram-apps/signals').Signal<boolean>, isActive: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Complete component state.
 */
export declare const state: import('@telegram-apps/signals').Computed<State>;
