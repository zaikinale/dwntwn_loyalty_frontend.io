export { bindCssVars as bindViewportCssVars, isCssVarsBound as isViewportCssVarsBound, expand as expandViewport, requestFullscreen, isFullscreen, exitFullscreen, changeFullscreenError, changeFullscreenPromise, mount as mountViewport, isMounted as isViewportMounted, isMounting as isViewportMounting, mountError as viewportMountError, mountPromise as viewportMountPromise, unmount as unmountViewport, contentSafeAreaInsetRight as viewportContentSafeAreaInsetRight, contentSafeAreaInsetLeft as viewportContentSafeAreaInsetLeft, contentSafeAreaInsetBottom as viewportContentSafeAreaInsetBottom, contentSafeAreaInsetTop as viewportContentSafeAreaInsetTop, contentSafeAreaInsets as viewportContentSafeAreaInsets, width as viewportWidth, height as viewportHeight, stableHeight as viewportStableHeight, isStable as isViewportStable, isExpanded as isViewportExpanded, safeAreaInsets as viewportSafeAreaInsets, safeAreaInsetTop as viewportSafeAreaInsetTop, safeAreaInsetRight as viewportSafeAreaInsetRight, safeAreaInsetLeft as viewportSafeAreaInsetLeft, safeAreaInsetBottom as viewportSafeAreaInsetBottom, state as viewportState, } from './exports.variable.js';
export * as viewport from './exports.variable.js';
export { requestContentSafeAreaInsets, requestSafeAreaInsets, requestViewport } from './static.js';
export type { State as ViewportState, GetCSSVarNameFn as ViewportGetCSSVarNameFn, GetCSSVarNameKey as ViewportGetCSSVarNameKey, } from './types.js';
