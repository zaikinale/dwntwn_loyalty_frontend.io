import { AbortablePromise } from 'better-promises';
import { RequestOptionsNoCapture } from '../../../types.js';
/**
 * Mounts the Viewport component.
 * @throws {FunctionNotAvailableError} The environment is unknown
 * @throws {FunctionNotAvailableError} The SDK is not initialized
 * @throws {ConcurrentCallError} The component is already mounting
 * @example
 * if (mount.isAvailable() && !isMounting()) {
 *   await mount();
 * }
 */
export declare const mount: import('../../wrappers/wrapSafe.js').SafeWrapped<(options?: RequestOptionsNoCapture | undefined) => AbortablePromise<void>, false, never>;
export declare const mountPromise: import('@telegram-apps/signals').Computed<AbortablePromise<any> | undefined>, isMounting: import('@telegram-apps/signals').Computed<boolean>;
export declare const mountError: import('@telegram-apps/signals').Computed<Error | undefined>;
export declare const _isMounted: import('@telegram-apps/signals').Signal<boolean>, isMounted: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Unmounts the Viewport.
 */
export declare function unmount(): void;
