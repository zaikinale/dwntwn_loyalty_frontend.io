/**
 * Signal indicating if the confirmation dialog should be shown, while the user
 * is trying to close the Mini App.
 */
export declare const _isConfirmationEnabled: import('@telegram-apps/signals').Signal<boolean>, isConfirmationEnabled: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Signal indicating if the Closing Behavior component is currently mounted.
 */
export declare const _isMounted: import('@telegram-apps/signals').Signal<boolean>, isMounted: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Disables the closing confirmation dialog.
 * @throws {FunctionNotAvailableError} The environment is unknown
 * @throws {FunctionNotAvailableError} The parent component is not mounted
 * @throws {FunctionNotAvailableError} The SDK is not initialized
 * @example
 * if (disableConfirmation.isAvailable()) {
 *   disableConfirmation();
 * }
 */
export declare const disableConfirmation: import('../../wrappers/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Enables the closing confirmation dialog.
 * @throws {FunctionNotAvailableError} The environment is unknown
 * @throws {FunctionNotAvailableError} The parent component is not mounted
 * @throws {FunctionNotAvailableError} The SDK is not initialized
 * @example
 * if (enableConfirmation.isAvailable()) {
 *   enableConfirmation();
 * }
 */
export declare const enableConfirmation: import('../../wrappers/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Mounts the Closing Behavior component restoring its state.
 * @throws {FunctionNotAvailableError} The environment is unknown
 * @throws {FunctionNotAvailableError} The SDK is not initialized
 * @example
 * if (mount.isAvailable()) {
 *   mount();
 * }
 */
export declare const mount: import('../../wrappers/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Unmounts the Closing Behavior component.
 */
export declare function unmount(): void;
